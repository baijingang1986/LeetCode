/*
Evaluate the value of an arithmetic expression in Reverse Polish Notation.
Valid operators are+,-,*,/. Each operand may be an integer or another expression.
Some examples:
["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6
*/

import java.util.*;
public class Solution {
    public int evalRPN(String[] tokens) {
         
        Stack<Integer> s = new Stack<Integer>();
        for(int i =0;i<tokens.length;i++){
            if(tokens[i].equals("+")){
                int m = (int)s.pop();
                int n = (int)s.pop();
                s.push(m+n);
                continue;
            } else if(tokens[i].equals("-")){
                int m = (int)s.pop();
                int n = (int)s.pop();
                s.push(n-m);
                continue;
            } else if(tokens[i].equals("*")){
                int m = (int)s.pop();
                int n = (int)s.pop();
                s.push(n*m);
                continue;
            } else if(tokens[i].equals("/")){
                int m = (int)s.pop();
                int n = (int)s.pop();
                s.push(n/m);
                continue;
            }
             
            s.push(Integer.valueOf(tokens[i]));
        }
         
        return (int)s.pop();
    }
}
